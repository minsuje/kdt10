<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>web Socket 채팅</title>
</head>
<body>
        <h1>채팅</h1>
        
        <!-- 채팅내역 -->
        <ul></ul>

        <!-- 채팅 input -->
        <!-- 여기로 들어온 내용을 채팅으로 인식 -->
        <form id="chat">
            이름<input type="text" id="name"><br>
            내용<input type="text" id="message"><br>
            <button>전송</button>
        </form>

        <script>
            // 클라이언트 소켓 개체
            const socket = new WebSocket('ws://localhost:8000');
            console.log(socket);

            const chatForm = document.getElementById('chat');

            const ul = document.querySelector('ul');

            // open 이벤트
            socket.addEventListener('open', (event) =>{
                console.log('[서버 연결 완료]');
            })
            socket.addEventListener('close', (event) =>{
                console.log('[서버 연결 종료]');
            })
            socket.addEventListener('error', (event) =>{
                console.log('[에러 발생!!]', event.console.error);
            })

                        // =============== 서버로 부터 받은 res.send(message); ===============
            //message 이벤트
            socket.addEventListener('message', (event) =>{
                console.log('event > ', event);

                // 현재 넘어온 메시지가 json객체라 변경해준다
                const data = JSON.parse(event.data);
                const {msg, name} = data; // 구조분해 할당
                
                const li = document.createElement('li');
                li.textContent = `${name}님 - ${msg}`;
                ul.appendChild(li);
            })

            // 폼 submit 이벤트
            chatForm.addEventListener('submit', (event) =>{
                // 새로고침 방지
                event.preventDefault();

                //input에 입력한 정보를 바탕으로 메시지 데이터 생성
                const msg = chatForm.message.value;
                const name = chatForm.name.value;

                const data = {msg: msg, name: name}; // const data = {msg, name};
                console.log('보내려는 메시지 데이터 > ', data);

                // data를 웹 소켓 서버로 전송
                // 웹 소켓 서버가 데이터를 쉽게 처리할 수 있도록
                // (= 웹 소켓 서버가 js 언어를 쓰지 않을 수도 있으니, JSON 형식의 텍스트 데이터로 변환해서 웹 서버로 전송)
                // ** 중요
                socket.send(JSON.stringify(data));

                //input 초기화
                chatForm.reset();
            })


        </script>
</body>
</html>